[versions]
dokka = "2.0.0"
git-semver = "0.16.1"
jmh = "1.37"
junit-jupiter = "5.13.3"
kotest = "6.0.0.M8"
kotlin = "2.1.21"
kotlinx-coroutines = "1.10.2"
mockito = "5.18.0"
mockk = "1.14.5"
mssql-server-driver = "12.10.1.jre11"
mysql-driver = "9.3.0"
oracle-driver = "23.8.0.25.04"
postgresql-driver = "42.7.7"
slf4j = "2.0.17"
sqlite = "3.50.3.0"
test-containers = "1.21.3"

[libraries]
jmh-core = { module = "org.openjdk.jmh:jmh-core", version.ref = "jmh" }
jmh-generator-annprocess = { module = "org.openjdk.jmh:jmh-generator-annprocess", version.ref = "jmh" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit-jupiter" }
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin"}
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref="kotlinx-coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref="kotlinx-coroutines" }
# mockito only to be used from Java code (API usability test)
mockito = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mssql-server-driver = { module = "com.microsoft.sqlserver:mssql-jdbc", version.ref = "mssql-server-driver" }
mysql-driver = { module = "com.mysql:mysql-connector-j", version.ref = "mysql-driver" }
oracle-driver = { module = "com.oracle.database.jdbc:ojdbc11", version.ref = "oracle-driver" }
postgresql-driver = { module = "org.postgresql:postgresql", version.ref = "postgresql-driver" }
slf4j = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
sqlite-jdbc = { module = "org.xerial:sqlite-jdbc", version.ref = "sqlite" }
test-containers = { module = "org.testcontainers:testcontainers", version.ref = "test-containers" }
test-containers-junit = { module = "org.testcontainers:junit-jupiter", version.ref = "test-containers" }
test-containers-mssqlserver = { module = "org.testcontainers:mssqlserver", version.ref = "test-containers" }
test-containers-mysql = { module = "org.testcontainers:mysql", version.ref = "test-containers" }
test-containers-oracle = { module = "org.testcontainers:oracle-free", version.ref = "test-containers" }
test-containers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "test-containers" }

# PLUGINS
##  This way because buildSrc is not supported for plugins
deployer-plugin = { module = "io.deepmedia.tools.deployer:io.deepmedia.tools.deployer.gradle.plugin", version = "0.18.0" }
dokka-plugin = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "dokka" }
dokka-javadoc-plugin = { module = "org.jetbrains.dokka-javadoc:org.jetbrains.dokka-javadoc.gradle.plugin", version.ref = "dokka" }
ktlint-plugin = { module = "org.jlleitschuh.gradle:ktlint-gradle", version = "12.1.2" }
kotlin-jvm-plugin = { module = "org.jetbrains.kotlin.jvm:org.jetbrains.kotlin.jvm.gradle.plugin", version.ref = "kotlin" }
kover-plugin = { module = "org.jetbrains.kotlinx:kover-gradle-plugin", version = "0.9.1" }

[bundles]
jmh = ["jmh-core", "jmh-generator-annprocess"]
test = ["junit-jupiter", "mockk", "kotest-assertions-core"]
test-containers = [
    "test-containers-junit",
    "test-containers-mysql",
    "test-containers-postgresql",
    "test-containers-mssqlserver",
    "test-containers-oracle"
]
test-dbs = ["mysql-driver", "postgresql-driver", "sqlite-jdbc", "mssql-server-driver", "oracle-driver"]

[plugins]
sonar = { id = "org.sonarqube", version = "6.2.0.5505" }
git-semver = { id = "com.github.jmongard.git-semver-plugin", version.ref = "git-semver" }
jmh = { id = "me.champeau.gradle:jmh-gradle-plugin", version = "0.7.2" }




